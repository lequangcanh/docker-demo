upstream rails_app {
  server app:3000;
}

server {
  #server_name www.example.com;
  root   $RAILS_ROOT/public;
  #index  index.html;

  access_log $RAILS_ROOT/log/nginx_access.log;
  error_log $RAILS_ROOT/log/nginx_error.log;

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {
    try_files $uri @rails;
    access_log off;
    gzip_static on;
    # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;

    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # send non-static file requests to the app server
  location / {
    try_files $uri @rails;

    if ($request_method = OPTIONS ) {
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, PATCH, DELETE";
      # add_header Access-Control-Allow-Headers "Authorization,content-type";
      add_header Access-Control-Allow-Headers "DNT,Authorization,Content-Type,Content-Length,DAuthorization,X-Requested-With,X-User-Agent,Cache-Control,User-Agent,Range,Accept,Accept-Charset,Accept-Encoding,Cookie";
      #add_header Access-Control-Allow-Headers "*";
      add_header Access-Control-Allow-Credentials "true";
      add_header Content-Length 0;
      add_header Content-Type text/plain;
      return 200;
    }
  }

  location @rails {
    proxy_set_header X-Forwarded-Proto $thescheme;
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://rails_app;
  }
}

map $http_x_forwarded_proto $thescheme {
  default $scheme;
  https https;
}
